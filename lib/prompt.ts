const HF_API_URL = "https://router.huggingface.co/v1/chat/completions";
const HF_TOKEN = process.env.EXPO_PUBLIC_HF_TOKEN;
const DEFAULT_MODEL = "meta-llama/Llama-3-8B-Instruct";

export async function generateRecipeFromIngredients(
  ingredients: string[],
  model?: string
): Promise<string> {
  if (!HF_TOKEN) {
    throw new Error("Hugging Face API token is not set");
  }
  const usedModel = model || DEFAULT_MODEL;
  const prompt = `Generate a detailed recipe using only these ingredients: ${ingredients.join(", ")}. The recipe should include a title, ingredients list, and step-by-step instructions. Respond in English.`;
  const response = await fetch(HF_API_URL, {
    method: "POST",
    headers: {
      "Content-Type": "application/json",
      Authorization: `Bearer ${HF_TOKEN}`,
    },
    body: JSON.stringify({
      model: usedModel,
      messages: [
        { role: "system", content: "You are a helpful chef assistant." },
        { role: "user", content: prompt },
      ],
      max_tokens: 600,
      temperature: 0.7,
    }),
  });
  if (!response.ok) {
    const err = await response.json().catch(() => ({}));
    throw new Error(err?.error?.message || response.statusText);
  }
  const data = await response.json();
  const recipe = data.choices?.[0]?.message?.content?.trim();
  if (!recipe) {
    throw new Error("No recipe generated by Hugging Face");
  }
  return recipe;
}
